// –°–∞–ø—ë—Ä

// –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª–µ –¥–ª—è –∏–≥—Ä—ã ¬´–°–∞–ø—ë—Ä¬ª 
// –ø–æ –µ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ‚Äî –≤—ã—Å–æ—Ç–µ, —à–∏—Ä–∏–Ω–µ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º 
// —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –Ω–µ–º –º–∏–Ω.

// –í–∫—Ä–∞—Ç—Ü–µ –Ω–∞–ø–æ–º–Ω–∏–º –ø—Ä–∞–≤–∏–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø–æ–ª—è –¥–ª—è –∏–≥—Ä—ã ¬´–°–∞–ø—ë—Ä¬ª:

// –ø–æ–ª–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–ª–µ—Ç–æ–∫ —Å –º–∏–Ω–∞–º–∏ –∏ –ø—É—Å—Ç—ã—Ö –∫–ª–µ—Ç–æ–∫;
// –∫–ª–µ—Ç–∫–∏ —Å –º–∏–Ω–æ–π –æ–±–æ–∑–Ω–∞—á–∞—é—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º *;
// –ø—É—Å—Ç—ã–µ –∫–ª–µ—Ç–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 8 ‚Äî 
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω –Ω–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö –∫–ª–µ—Ç–∫–∞—Ö.
// –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞
// –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —Ç—Ä–∏ —á–∏—Å–ª–∞:

// —á–∏—Å–ª–æ 
// ùëö
// m –æ—Ç 1 –¥–æ 100 ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –Ω–∞ –ø–æ–ª–µ;
// —á–∏—Å–ª–æ 
// ùëõ
// n –æ—Ç 1 –¥–æ 100 ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–∞ –ø–æ–ª–µ;
// —á–∏—Å–ª–æ 
// ùëò
// k –æ—Ç 0 –¥–æ 
// ùëö
// ùëõ
// mn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω –Ω–∞ –ø–æ–ª–µ.
// –í —Å–ª–µ–¥—É—é—â–∏—Ö 
// ùëò
// k —Å—Ç—Ä–æ–∫–∞—Ö —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –ø–∞—Ä—ã —á–∏—Å–µ–ª —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –º–∏–Ω 
// (–Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü–∞). –ù—É–º–µ—Ä–∞—Ü–∏—è –≤–µ–¥—ë—Ç—Å—è —Å –µ–¥–∏–Ω–∏—Ü—ã.

// –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
// –í—ã–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø–æ–ª–µ, —Ä–∞–∑–¥–µ–ª—è—è —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—è 
// —Å–∏–º–≤–æ–ª–æ–º \n, –∞ —Å—Ç–æ–ª–±—Ü—ã ‚Äî –ø—Ä–æ–±–µ–ª–æ–º.

#include <iostream>
#include <vector>
#include <string>

int main()
{
    int m, n, k;
    std::cin >> m >> n >> k;
    
    std::vector <std::vector <char>> minesweeper (m, std::vector<char> (n, '0'));
    
    // for (size_t i = 0; i != m; ++i){
    //     for (size_t j = 0; j != n; ++j){
    //         std::cin  >> minesweeper[i][j];
    //     }
    // }
    int x, y;
    for (int i = 0; i != k; ++i){
        std::cin >> x >> y;
        
        x--;
        y--;
        
        minesweeper[x][y] = '*';
        
        for (int dx = -1; dx <= 1; ++dx) {
            for (int dy = -1; dy <= 1; ++dy) {
                int nx = x + dx, ny = y + dy;
                if (nx >= 0 && nx < m && ny >= 0 && ny < n && minesweeper[nx][ny] != '*') {
                    minesweeper[nx][ny]++; 
                }
            }
        }
    }
    
    
    for (int i = 0; i != m; ++i){
        for (int j = 0; j != n; ++j){
            std::cout << minesweeper[i][j] << ' ';
        }
        std::cout << std::endl;
    }
    
    return 0;
}